import trafaret as t

from config.config import BASE_DIR
from config.utils import load_config


CONFIG_TRAFARET = t.Dict(
    {
        'AGENT_HOST': t.String,
        'AGENT_PORT': t.Int,
        'DOCKER_CONTAINER': t.String,
        'DOCKER_CONTAINER_START': t.String,
        'DOCKER_CONTAINER_STOP': t.String,
        'DOCKER_CONTAINER_RESTART': t.String,
        'DOCKER_CONTAINER_PAUSE': t.String,
        'DOCKER_CONTAINER_UNPAUSE': t.String,
        'DOCKER_CONTAINER_KILL': t.String,
        'DOCKER_CONTAINER_PRUNE': t.String,
        'DOCKER_CONTAINER_LOGS': t.String,
        'DOCKER_CONTAINER_STATS': t.String,
        'DOCKER_CONTAINER_RUN': t.String,
        'DOCKER_IMAGE': t.String,
        'DOCKER_IMAGE_PRUNE': t.String,
        'DOCKER_IMAGE_BUILD': t.String,
        'DOCKER_IMAGE_PULL': t.String,
        'DOCKER_IMAGE_TAG': t.String,
        'DOCKER_NETWORK': t.String,
        'DOCKER_NETWORK_CREATE': t.String,
        'DOCKER_NETWORK_PRUNE': t.String,
        'DOCKER_NETWORK_CONNECT': t.String,
        'DOCKER_NETWORK_DISCONNECT': t.String,
        'DOCKER_VOLUME': t.String,
        'DOCKER_VOLUME_CREATE': t.String,
        'DOCKER_VOLUME_PRUNE': t.String,
        'DOCKER_PLUGIN': t.String,
        'DOCKER_PLUGIN_INSTALL': t.String,
        'DOCKER_PLUGIN_ENABLE': t.String,
        'DOCKER_PLUGIN_DISABLE': t.String,
        'DOCKER_SYSTEM': t.String,
        'DOCKER_SYSTEM_EVENTS': t.String,
        'DOCKER_SYSTEM_PRUNE': t.String,
        'DOCKER_SYSTEM_AUTH': t.String,
    }
)


CONF = load_config(
    file=BASE_DIR / 'agent_config.yml',
    config_trafaret=CONFIG_TRAFARET
)


AGENT_HOST = CONF['AGENT_HOST']
AGENT_PORT = CONF['AGENT_PORT']
AGENT_URL = f'http://{AGENT_HOST}:{AGENT_PORT}'

DOCKER_CONTAINER = CONF['DOCKER_CONTAINER']
DOCKER_CONTAINER_START = CONF['DOCKER_CONTAINER_START']
DOCKER_CONTAINER_STOP = CONF['DOCKER_CONTAINER_STOP']
DOCKER_CONTAINER_RESTART = CONF['DOCKER_CONTAINER_RESTART']
DOCKER_CONTAINER_PAUSE = CONF['DOCKER_CONTAINER_PAUSE']
DOCKER_CONTAINER_UNPAUSE = CONF['DOCKER_CONTAINER_UNPAUSE']
DOCKER_CONTAINER_KILL = CONF['DOCKER_CONTAINER_KILL']
DOCKER_CONTAINER_LOGS = CONF['DOCKER_CONTAINER_LOGS']
DOCKER_CONTAINER_STATS = CONF['DOCKER_CONTAINER_STATS']
DOCKER_CONTAINER_PRUNE = CONF['DOCKER_CONTAINER_PRUNE']
DOCKER_CONTAINER_RUN = CONF['DOCKER_CONTAINER_RUN']

DOCKER_IMAGE = CONF['DOCKER_IMAGE']
DOCKER_IMAGE_PRUNE = CONF['DOCKER_IMAGE_PRUNE']
DOCKER_IMAGE_BUILD = CONF['DOCKER_IMAGE_BUILD']
DOCKER_IMAGE_PULL = CONF['DOCKER_IMAGE_PULL']
DOCKER_IMAGE_TAG = CONF['DOCKER_IMAGE_TAG']

DOCKER_NETWORK = CONF['DOCKER_NETWORK']
DOCKER_NETWORK_CREATE = CONF['DOCKER_NETWORK_CREATE']
DOCKER_NETWORK_PRUNE = CONF['DOCKER_NETWORK_PRUNE']
DOCKER_NETWORK_CONNECT = CONF['DOCKER_NETWORK_CONNECT']
DOCKER_NETWORK_DISCONNECT = CONF['DOCKER_NETWORK_DISCONNECT']

DOCKER_VOLUME = CONF['DOCKER_VOLUME']
DOCKER_VOLUME_CREATE = CONF['DOCKER_VOLUME_CREATE']
DOCKER_VOLUME_PRUNE = CONF['DOCKER_VOLUME_PRUNE']

DOCKER_PLUGIN = CONF['DOCKER_PLUGIN']

DOCKER_PLUGIN_INSTALL = CONF['DOCKER_PLUGIN_INSTALL']
DOCKER_PLUGIN_ENABLE = CONF['DOCKER_PLUGIN_ENABLE']
DOCKER_PLUGIN_DISABLE = CONF['DOCKER_PLUGIN_DISABLE']

DOCKER_SYSTEM = CONF['DOCKER_SYSTEM']

DOCKER_SYSTEM_EVENTS = CONF['DOCKER_SYSTEM_EVENTS']
DOCKER_SYSTEM_PRUNE = CONF['DOCKER_SYSTEM_PRUNE']
DOCKER_SYSTEM_AUTH = CONF['DOCKER_SYSTEM_AUTH']
